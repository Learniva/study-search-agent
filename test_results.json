{
  "unit": {
    "returncode": 1,
    "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.12.0, pytest-8.4.2, pluggy-1.6.0\nrootdir: /Users/dabwitso/Documents/Work/Learniva/Software Engineering/study-search-agent\nplugins: asyncio-1.2.0, anyio-4.11.0, langsmith-0.4.37, Faker-37.11.0, cov-7.0.0\nasyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 28 items\n\ntests/test_auth_simple.py ......F.........FFFFFFF...FF                   [100%]\n\n=================================== FAILURES ===================================\n_____________ TestPasswordValidator.test_validate_strong_password ______________\ntests/test_auth_simple.py:86: in test_validate_strong_password\n    assert result.is_valid is True\nE   AssertionError: assert False is True\nE    +  where False = PasswordValidationResult(is_valid=False, strength=<PasswordStrength.FAIR: 'fair'>, score=45, errors=['Password must co...l characters'], warnings=['Password contains common word patterns'], suggestions=['Add special characters (!@#$%^&*)']).is_valid\n________ TestPasswordValidator.test_validate_password_strength_scoring _________\ntests/test_auth_simple.py:181: in test_validate_password_strength_scoring\n    assert strong_result.score >= 80\nE   AssertionError: assert 45 >= 80\nE    +  where 45 = PasswordValidationResult(is_valid=False, strength=<PasswordStrength.FAIR: 'fair'>, score=45, errors=['Password must co...l characters'], warnings=['Password contains common word patterns'], suggestions=['Add special characters (!@#$%^&*)']).score\n_____________ TestAccountLockout.test_record_failed_attempt_first ______________\ntests/test_auth_simple.py:195: in test_record_failed_attempt_first\n    status = await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n__________ TestAccountLockout.test_record_failed_attempt_max_reached ___________\ntests/test_auth_simple.py:206: in test_record_failed_attempt_max_reached\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n_____________ TestAccountLockout.test_is_account_locked_not_locked _____________\ntests/test_auth_simple.py:215: in test_is_account_locked_not_locked\n    status = await self.lockout_manager.check_lockout_status(user_id=\"user123\", ip_address=\"127.0.0.1\")\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutils/auth/account_lockout.py:152: in check_lockout_status\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n_______________ TestAccountLockout.test_is_account_locked_locked _______________\ntests/test_auth_simple.py:224: in test_is_account_locked_locked\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n____________________ TestAccountLockout.test_unlock_account ____________________\ntests/test_auth_simple.py:235: in test_unlock_account\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n___________________ TestAccountLockout.test_lockout_disabled ___________________\ntests/test_auth_simple.py:250: in test_lockout_disabled\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n______________ TestEdgeCases.test_password_validation_edge_cases _______________\ntests/test_auth_simple.py:331: in test_password_validation_edge_cases\n    assert isinstance(result, PasswordValidationResult)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^\nE   NameError: name 'PasswordValidationResult' is not defined\n________________ TestEdgeCases.test_account_lockout_edge_cases _________________\ntests/test_auth_simple.py:339: in test_account_lockout_edge_cases\n    await lockout_manager.record_failed_attempt(user_id=\"\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n=========================== short test summary info ============================\nFAILED tests/test_auth_simple.py::TestPasswordValidator::test_validate_strong_password\nFAILED tests/test_auth_simple.py::TestPasswordValidator::test_validate_password_strength_scoring\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_record_failed_attempt_first\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_record_failed_attempt_max_reached\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_is_account_locked_not_locked\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_is_account_locked_locked\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_unlock_account - T...\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_lockout_disabled\nFAILED tests/test_auth_simple.py::TestEdgeCases::test_password_validation_edge_cases\nFAILED tests/test_auth_simple.py::TestEdgeCases::test_account_lockout_edge_cases\n================== 10 failed, 18 passed, 3 warnings in 4.28s ===================\n",
    "stderr": "",
    "success": false
  },
  "integration": {
    "returncode": 1,
    "stdout": "============================= test session starts ==============================\nplatform darwin -- Python 3.12.0, pytest-8.4.2, pluggy-1.6.0\nrootdir: /Users/dabwitso/Documents/Work/Learniva/Software Engineering/study-search-agent\nplugins: asyncio-1.2.0, anyio-4.11.0, langsmith-0.4.37, Faker-37.11.0, cov-7.0.0\nasyncio: mode=Mode.STRICT, debug=False, asyncio_default_fixture_loop_scope=None, asyncio_default_test_loop_scope=function\ncollected 28 items\n\ntests/test_auth_simple.py ......F.........FFFFFFF...FF                   [100%]\n\n=================================== FAILURES ===================================\n_____________ TestPasswordValidator.test_validate_strong_password ______________\ntests/test_auth_simple.py:86: in test_validate_strong_password\n    assert result.is_valid is True\nE   AssertionError: assert False is True\nE    +  where False = PasswordValidationResult(is_valid=False, strength=<PasswordStrength.FAIR: 'fair'>, score=45, errors=['Password must co...l characters'], warnings=['Password contains common word patterns'], suggestions=['Add special characters (!@#$%^&*)']).is_valid\n________ TestPasswordValidator.test_validate_password_strength_scoring _________\ntests/test_auth_simple.py:181: in test_validate_password_strength_scoring\n    assert strong_result.score >= 80\nE   AssertionError: assert 45 >= 80\nE    +  where 45 = PasswordValidationResult(is_valid=False, strength=<PasswordStrength.FAIR: 'fair'>, score=45, errors=['Password must co...l characters'], warnings=['Password contains common word patterns'], suggestions=['Add special characters (!@#$%^&*)']).score\n_____________ TestAccountLockout.test_record_failed_attempt_first ______________\ntests/test_auth_simple.py:195: in test_record_failed_attempt_first\n    status = await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n__________ TestAccountLockout.test_record_failed_attempt_max_reached ___________\ntests/test_auth_simple.py:206: in test_record_failed_attempt_max_reached\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n_____________ TestAccountLockout.test_is_account_locked_not_locked _____________\ntests/test_auth_simple.py:215: in test_is_account_locked_not_locked\n    status = await self.lockout_manager.check_lockout_status(user_id=\"user123\", ip_address=\"127.0.0.1\")\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\nutils/auth/account_lockout.py:152: in check_lockout_status\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n_______________ TestAccountLockout.test_is_account_locked_locked _______________\ntests/test_auth_simple.py:224: in test_is_account_locked_locked\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n____________________ TestAccountLockout.test_unlock_account ____________________\ntests/test_auth_simple.py:235: in test_unlock_account\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n___________________ TestAccountLockout.test_lockout_disabled ___________________\ntests/test_auth_simple.py:250: in test_lockout_disabled\n    await self.lockout_manager.record_failed_attempt(user_id=\"user123\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n______________ TestEdgeCases.test_password_validation_edge_cases _______________\ntests/test_auth_simple.py:331: in test_password_validation_edge_cases\n    assert isinstance(result, PasswordValidationResult)\n                              ^^^^^^^^^^^^^^^^^^^^^^^^\nE   NameError: name 'PasswordValidationResult' is not defined\n________________ TestEdgeCases.test_account_lockout_edge_cases _________________\ntests/test_auth_simple.py:339: in test_account_lockout_edge_cases\n    await lockout_manager.record_failed_attempt(user_id=\"\", ip_address=\"127.0.0.1\")\nutils/auth/account_lockout.py:117: in record_failed_attempt\n    async with get_session() as session:\nE   TypeError: 'async_generator' object does not support the asynchronous context manager protocol\n=========================== short test summary info ============================\nFAILED tests/test_auth_simple.py::TestPasswordValidator::test_validate_strong_password\nFAILED tests/test_auth_simple.py::TestPasswordValidator::test_validate_password_strength_scoring\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_record_failed_attempt_first\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_record_failed_attempt_max_reached\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_is_account_locked_not_locked\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_is_account_locked_locked\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_unlock_account - T...\nFAILED tests/test_auth_simple.py::TestAccountLockout::test_lockout_disabled\nFAILED tests/test_auth_simple.py::TestEdgeCases::test_password_validation_edge_cases\nFAILED tests/test_auth_simple.py::TestEdgeCases::test_account_lockout_edge_cases\n================== 10 failed, 18 passed, 3 warnings in 4.44s ===================\n",
    "stderr": "",
    "success": false
  }
}